name: Publish to PyPI (OIDC)

on:
  workflow_run:
    workflows:
      - Auto bump version after merge
    types:
      - completed
  workflow_dispatch:

permissions:
  id-token: write   # Required for PyPI Trusted Publisher (OIDC)
  contents: read

concurrency:
  group: pypi-publish
  cancel-in-progress: false

jobs:
  build-and-publish:
    name: Build & Publish
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success'
    environment:
      name: pypi   # Must match the Environment name you configured on PyPI

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_branch || github.ref }}
          repository: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.repository.full_name || github.repository }}

      - name: Sync branch tip for workflow_run events
        if: github.event_name == 'workflow_run'
        run: |
          git fetch origin "${{ github.event.workflow_run.head_branch }}" --tags
          git checkout "${{ github.event.workflow_run.head_branch }}"
          git reset --hard "origin/${{ github.event.workflow_run.head_branch }}"

      - name: Determine release tag on HEAD
        id: release_tag
        run: |
          TAG=$(git tag --points-at HEAD | grep '^v' | head -n 1 || true)
          if [ -z "$TAG" ]; then
            echo "No release tag found on HEAD; skipping publish." >&2
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Abort when release tag is missing
        if: steps.release_tag.outputs.tag == ''
        run: exit 0

      - name: Set up Python
        if: steps.release_tag.outputs.tag != ''
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Upgrade pip and install build backend
        if: steps.release_tag.outputs.tag != ''
        run: |
          python -m pip install --upgrade --trusted-host pypi.org --trusted-host files.pythonhosted.org pip
          python -m pip install --upgrade --trusted-host pypi.org --trusted-host files.pythonhosted.org build

      - name: Build sdist and wheel
        if: steps.release_tag.outputs.tag != ''
        run: python -m build --sdist --wheel --outdir dist

      - name: Upload build artifacts
        if: steps.release_tag.outputs.tag != ''
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

      # Publish to PyPI using OpenID Connect (no API token needed)
      - name: Publish to PyPI
        if: steps.release_tag.outputs.tag != ''
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          skip-existing: true
          verbose: true
          print-hash: true
          attestations: true  # Generate supply-chain provenance
